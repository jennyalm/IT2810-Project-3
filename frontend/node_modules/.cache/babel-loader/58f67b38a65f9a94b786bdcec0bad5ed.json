{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jakob\\\\Prosjekter\\\\Web-3\\\\project-3\\\\frontend\\\\src\\\\App.js\";\n// Hooks\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\"; // Style\n\nimport './App.css'; // React components\n\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport DisplayMovies from './components/DisplayMovies/DisplayMovies'; // redux\n\nimport { connect } from 'react-redux';\nimport { success, failure, req, yearAsc, yearDesc } from './actions'; // the default search when website opens, with search: s=tarzan\n\nconst MOVIE_API_URL = fetch(process.env.PUBLIC_URL + \"/fakeData\"); // const MOVIE_API_URL = \"https://www.omdbapi.com/?s=tarzan&apikey=4a3b711b\";\n\nconst App = props => {\n  // works like a lifecycle method and updates displayed movies depending on Search\n  useEffect(() => {\n    fetch(MOVIE_API_URL).then(response => response.json()).then(jsonResponse => {\n      props.success(jsonResponse.Search);\n    });\n  }, []); // The search method , må endre 12000 til riktig nummer\n\n  const search = searchValue => {\n    console.log(\"Attempting to search\");\n    props.req(); //  http://it2810-13.idi.ntnu.no/Product\n\n    const urlToSearch = \"http://localhost:4000/movies?\" + (props.movies.Title ? \"&Title=\".concat(props.movies.Title) : '');\n    console.log(urlToSearch);\n    axios.get(urlToSearch).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        props.success(jsonResponse.Search);\n      } else {\n        props.failure(jsonResponse.Error);\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Test\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"React-Redux movie searcher\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"searchStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Search, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"displaySize\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(DisplayMovies, {\n    loading: props.loading,\n    movies: props.movies,\n    errorMessage: props.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n}; // maps the value in the global redux store to props.\n// OPS!! FÅR OPP MELDING I CONSOLE, FORVENTER NOE ANNET ENN Reducer HER, MEN HVA?\n\n\nconst mapStateToProps = state => ({\n  loading: state.Reducer.loading,\n  movies: state.Reducer.movies,\n  errorMessage: state.Reducer.errorMessage,\n  sortBy: state.SortReducer.sortBy,\n  order: state.SortReducer.order\n}); // dispatches to the global redux store.\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    success: event => dispatch(success(event)),\n    failure: event => dispatch(failure(event)),\n    req: () => dispatch(req()),\n    yearAsc: () => dispatch(yearAsc()),\n    yearDesc: () => dispatch(yearDesc())\n  };\n}; // connects mapStateToProps and mapDispatchToProps to App.\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\jakob\\Prosjekter\\Web-3\\project-3\\frontend\\src\\App.js"],"names":["React","useEffect","axios","Header","Search","DisplayMovies","connect","success","failure","req","yearAsc","yearDesc","MOVIE_API_URL","fetch","process","env","PUBLIC_URL","App","props","then","response","json","jsonResponse","search","searchValue","console","log","urlToSearch","movies","Title","get","Response","Error","loading","errorMessage","mapStateToProps","state","Reducer","sortBy","SortReducer","order","mapDispatchToProps","dispatch","event"],"mappings":"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","sourcesContent":["// Hooks\r\nimport React, { useEffect } from \"react\";\r\nimport axios from \"axios\"\r\n\r\n\r\n// Style\r\nimport './App.css';\r\n\r\n// React components\r\nimport Header from \"./components/Header/Header\";\r\nimport Search from \"./components/Search/Search\";\r\nimport DisplayMovies from './components/DisplayMovies/DisplayMovies'\r\n\r\n\r\n// redux\r\nimport { connect } from 'react-redux';\r\nimport { success, failure, req, yearAsc, yearDesc } from './actions'\r\n\r\n\r\n// the default search when website opens, with search: s=tarzan\r\nconst MOVIE_API_URL = fetch(process.env.PUBLIC_URL + \"/fakeData\");\r\n\r\n\r\n// const MOVIE_API_URL = \"https://www.omdbapi.com/?s=tarzan&apikey=4a3b711b\";\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    // works like a lifecycle method and updates displayed movies depending on Search\r\n    useEffect(() => {\r\n        fetch(MOVIE_API_URL)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                props.success(jsonResponse.Search)\r\n            });\r\n    }, []);\r\n\r\n    // The search method , må endre 12000 til riktig nummer\r\n    const search = searchValue => {\r\n        console.log(\"Attempting to search\")\r\n        props.req()\r\n\r\n        //  http://it2810-13.idi.ntnu.no/Product\r\n\r\n        const urlToSearch = `http://localhost:4000/movies?` +((props.movies.Title) ? `&Title=${props.movies.Title}` : '');\r\n        console.log(urlToSearch);\r\n        axios.get(urlToSearch)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                if (jsonResponse.Response === \"True\") {\r\n                    props.success(jsonResponse.Search)\r\n                } else {\r\n                    props.failure(jsonResponse.Error)\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Test</h1>\r\n            <div>\r\n            <Header text=\"React-Redux movie searcher\" />\r\n            </div>\r\n            <div className=\"searchStyle\">\r\n            <Search search={search} />\r\n            </div>\r\n            <div className={\"displaySize\"}>\r\n            <DisplayMovies\r\n                loading={props.loading}\r\n                movies={props.movies}\r\n                errorMessage={props.errorMessage}\r\n            />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n// maps the value in the global redux store to props.\r\n\r\n// OPS!! FÅR OPP MELDING I CONSOLE, FORVENTER NOE ANNET ENN Reducer HER, MEN HVA?\r\nconst mapStateToProps = state => ({\r\n    loading: state.Reducer.loading,\r\n    movies: state.Reducer.movies,\r\n    errorMessage: state.Reducer.errorMessage,\r\n    sortBy: state.SortReducer.sortBy,\r\n    order: state.SortReducer.order\r\n\r\n})\r\n\r\n// dispatches to the global redux store.\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        success: (event) => dispatch(success(event)),\r\n        failure: (event) => dispatch(failure(event)),\r\n        req: () => dispatch(req()),\r\n        yearAsc: () => dispatch(yearAsc()),\r\n        yearDesc: () => dispatch(yearDesc())\r\n    }\r\n}\r\n\r\n\r\n// connects mapStateToProps and mapDispatchToProps to App.\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}